version: '3.3'


services:
################################################################################
# helper images
################################################################################
  base:
    image: tr069_base:${VERSION:-latest}
    environment:
    - DHCLIENT_TIMEOUT=300
    build:
        context: ./base
        args:
            - VERSION=${VERSION:-latest}

   ###### connected in the virtual world to a gateway ########################
  dhcp_client:
    image: tr069_dhcp_client:${VERSION:-latest}
    build:
        context: ./dhcp_client
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    depends_on:
      - base

   ###### connecting networks ################################################
  gateway:
    environment:
    - UPSTREAM_NETWORK_NAME=internet
    image: tr069_gateway:${VERSION:-latest}
    build:
        context: ./gateway
        args:
            - VERSION=${VERSION:-latest}
    hostname: private
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    depends_on:
      - base
      - dhcp_client
    networks:
      private1:
      private2:

################################################################################
# real implemented and used services
################################################################################

################################################################################
# debugging and testing
################################################################################
  rsyslog:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    tty: true
    container_name: tr069_rsyslog
    hostname: rsyslog
    image: tr069_rsyslog:${VERSION:-latest}
    build:
        context: ./rsyslog
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    expose:
      - 514
      - 514/udp
    networks:
      internet:

  probe1:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    - DISPLAY=${DISPLAY}
    tty: true
    container_name: tr069_probe1
    hostname: probe1
    image: tr069_probe1:${VERSION:-latest}
    build:
        context: ./probe
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    depends_on:
      - home0
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    networks:
      home0:


################################################################################
# gateways
################################################################################

  home0:
    environment:
    - KEEP_SERVICE_RUNNING=yes
    - UPSTREAM_NETWORK_NAME=internet
    # allowed range is 1-250 to generate addresses in 192.168.IP_ADDRES_BYTE_TO_SERVE.
    - IP_ADDRES_BYTE_TO_SERVE=${HOME0_IP_ADDRES_BYTE:-1}
    - IP_ADDRES_BYTE_RANGE_START=${HOME0_IP_ADDRES_START:-101}
    - IP_ADDRES_BYTE_RANGE_END=${HOME0_IP_ADDRES_END:-110}
    - OWN_IP_ADDRES_BYTE=${HOME0_OWN_IP_ADDRES_BYTE:-100}
    - DEFAULT_LEASE_TIME=${HOME0_DEFAULT_LEASE_TIME:-86400}
    - DOMAIN_TO_SERVE=home0.intern
    - WAIT_INTERVAL=${WAIT_INTERVAL:-86400}
    - WAIT_INTERVAL_MULTIPLIER=${WAIT_INTERVAL_MULTIPLIER:-1}
    - DHCLIENT_TIMEOUT=${DHCLIENT_TIMEOUT:-5}

    tty: true
    container_name: tr069_home0
    hostname: home0
    image: tr069_home0:${VERSION:-latest}
    build:
        context: ./home0
        args:
            - VERSION=${VERSION:-latest}
    privileged: true
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    security_opt:
      - apparmor:docker-default
    expose:
      - 53
      - 53/udp
      - 67/udp
      - 68/udp
    networks:
      internet:
      home0:


#
################################################################################
#


#
################################################################################
#

networks:
  home0:
    driver: macvlan
    driver_opts:
      parent: ${MY_DUT_INTERFACE}
  internet:
    driver: macvlan
  private1:
    driver: macvlan
  private2:
    driver: macvlan
